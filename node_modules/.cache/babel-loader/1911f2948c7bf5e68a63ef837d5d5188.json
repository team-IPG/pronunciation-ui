{"ast":null,"code":"var _jsxFileName = \"/Users/georgesalinas/Desktop/taem-IPG/pronunciation-ui/src/store/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  login: () => {},\n  logout: () => {},\n  setrole: () => {},\n  role: \"\"\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [role, setRole] = useState(null);\n\n  const loginHandler = () => {\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  const roleHandler = _role => {\n    setRole(_role);\n  };\n\n  const contextValue = {\n    isLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n    setrole: roleHandler,\n    role\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"xoqSg98tjV+t4MqaipQdE2AkUoc=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","AuthContext","createContext","isLoggedIn","login","logout","setrole","role","AuthContextProvider","props","setIsLoggedIn","setRole","loginHandler","logoutHandler","roleHandler","_role","contextValue","children"],"sources":["/Users/georgesalinas/Desktop/taem-IPG/pronunciation-ui/src/store/AuthContext.js"],"sourcesContent":["import React, { useState } from 'react'; \n\nconst AuthContext = React.createContext(\n    {\n        isLoggedIn: false, \n        login: () => {}, \n        logout: () => {},\n        setrole: () => {},\n        role: \"\"\n    }\n);\n\nexport const AuthContextProvider = (props) => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [role, setRole] = useState(null); \n    \n    const loginHandler = () => {\n        setIsLoggedIn(true);\n    }\n    const logoutHandler = () => {\n        setIsLoggedIn(false); \n    }\n    const roleHandler = (_role) => {\n        setRole(_role);\n    }\n    \n    const contextValue = {\n        isLoggedIn, \n        login: loginHandler, \n        logout: logoutHandler,\n        setrole: roleHandler, \n        role\n    }\n    \n    return (\n        <AuthContext.Provider value={contextValue}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}; \n\nexport default AuthContext;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAChB;EACIC,UAAU,EAAE,KADhB;EAEIC,KAAK,EAAE,MAAM,CAAE,CAFnB;EAGIC,MAAM,EAAE,MAAM,CAAE,CAHpB;EAIIC,OAAO,EAAE,MAAM,CAAE,CAJrB;EAKIC,IAAI,EAAE;AALV,CADgB,CAApB;AAUA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;EAAA;;EAC1C,MAAM,CAACN,UAAD,EAAaO,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACO,IAAD,EAAOI,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;;EAEA,MAAMY,YAAY,GAAG,MAAM;IACvBF,aAAa,CAAC,IAAD,CAAb;EACH,CAFD;;EAGA,MAAMG,aAAa,GAAG,MAAM;IACxBH,aAAa,CAAC,KAAD,CAAb;EACH,CAFD;;EAGA,MAAMI,WAAW,GAAIC,KAAD,IAAW;IAC3BJ,OAAO,CAACI,KAAD,CAAP;EACH,CAFD;;EAIA,MAAMC,YAAY,GAAG;IACjBb,UADiB;IAEjBC,KAAK,EAAEQ,YAFU;IAGjBP,MAAM,EAAEQ,aAHS;IAIjBP,OAAO,EAAEQ,WAJQ;IAKjBP;EALiB,CAArB;EAQA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAES,YAA7B;IAAA,UACKP,KAAK,CAACQ;EADX;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CA3BM;;GAAMT,mB;;KAAAA,mB;AA6Bb,eAAeP,WAAf"},"metadata":{},"sourceType":"module"}